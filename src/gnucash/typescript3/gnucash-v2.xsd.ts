// Code generated by xgen. DO NOT EDIT.

// XsToken ...
import {Lots, Nonstandardscu} from './act.xsd'
import {Days, Proximo} from './billterm.xsd'
import {Slots} from './book.xsd'
import {Get_quotes} from './cmdty.xsd'
import {Currency} from './price.xsd'
import {DeferredInstance, Schedule} from './sx.xsd'
import {Entries} from './taxtable.xsd'
import {Splits} from './trn.xsd'


// Countdata ...
export interface Countdata {
	'cd:type': string;
}

// Gncv2 ...
export interface Gncv2 {
	'count-data': Countdata;
	'gnc:book': Book;
	'gnc:commodity': Array<Commodity>;
	'gnc:account': Array<Account>;
}

// Book ...
export interface Book {
	'@_version': string;
	'book:id': string;
	'book:slots': Slots;
	'count-data': Countdata;
	'gnc:commodity': Array<Commodity>;
	'gnc:pricedb': Pricedb;
	'gnc:account': Array<Account>;
	'gnc:transaction': Array<Transaction>;
	'gnc:template-transactions': Array<Templatetransactions>;
	'gnc:schedxaction': Array<Schedxaction>;
	'gnc:budget': Array<Budget>;
	'gnc:GncBillTerm': Array<GncBillTerm>;
	'gnc:GncCustomer': Array<GncCustomer>;
	'gnc:GncEmployee': Array<GncEmployee>;
	'gnc:GncEntry': Array<GncEntry>;
	'gnc:GncInvoice': Array<GncInvoice>;
	'gnc:GncJob': Array<GncJob>;
	'gnc:GncOrder': Array<GncOrder>;
	'gnc:GncTaxTable': Array<GncTaxTable>;
	'gnc:GncVendor': Array<GncVendor>;
}

// Slot ...
export interface Slot {
	'slot:key': string;
}

// GncNumeric ...
export type GncNumeric = string;

// GUID ...
export type GUID = string;

// TimeSpec ...
export interface TimeSpec {
	'ts:date': string;
	'ts:ns': number;
}

// GDate ...
export interface GDate {
	'gdate': string;
}

// Commodity ...
export interface Commodity {
	'@_version': string;
	'cmdty:space': string;
//	'cmdty:space1': Space1;
//	'cmdty:id': Id;
//	'cmdty:name': Name;
//	'cmdty:xcode': Xcode;
//	'cmdty:fraction': Fraction;
//	'cmdty:get_quotes': Get_quotes;
//	'cmdty:quote_source': Quote_source;
//	'cmdty:quote_tz': Quote_tz;
	'gdate': string;
}

// Gdate ...
export type Gdate = string;

// Pricedb ...
export interface Pricedb {
	'@_version': string;
	'gnc:Price': Array<Price>;
}

// Price ...
export interface Price {
	'price:id': string;
	'price:commodity': Commodity;
	'price:currency': Currency;
	'price:time': string;
	'price:source': string;
	'price:type': string;
	'price:value': string;
}

// Account ...
export interface Account {
	'@_version': string;
	'act:name': string;
	'act:id': { '#text': string};
	'act:type': string;
	'act:commodity': Commodity;
	'act:commodity-scu': number;
	'act:non-standard-scu': Nonstandardscu;
	'act:code': string;
	'act:description': string;
	'act:slots': Slots;
	'act:parent'?: string;
	'act:lots': Lots;
}

// Lot ...
export interface Lot {
	'@_version': string;
	'lot:id': string;
	'lot:slots': Slots;
}

// Transaction ...
export interface Transaction {
	'@_version': string;
	'trn:id': {'#text':  string};
	'trn:currency': Currency;
	'trn:num': string;
	'trn:date-posted': TimeSpec;
	'trn:date-entered': TimeSpec;
	'trn:description': string;
	'trn:slots': Slots;
	'trn:splits': Splits;
}

// Templatetransactions ...
export interface Templatetransactions {
	'gnc:account': Array<Account>;
	'gnc:transaction': Array<Transaction>;
}

// Schedxaction ...
export interface Schedxaction {
	'@_version': string;
	'sx:id': string;
	'sx:name': string;
	'sx:enabled': string;
	'sx:autoCreate': string;
	'sx:autoCreateNotify': string;
	'sx:advanceCreateDays': number;
	'sx:advanceRemindDays': number;
	'sx:instanceCount': number;
	'sx:start': GDate;
	'sx:last': GDate;
	'sx:num-occur': number;
	'sx:rem-occur': number;
	'sx:end': GDate;
	'sx:templ-acct': string;
	'sx:schedule': Schedule;
	'sx:deferredInstance': Array<DeferredInstance>;
	'sx:slots': Slots;
}

// RecurrenceContent ...
export interface RecurrenceContent {
	'@_version': string;
	'recurrence:mult': number;
	'recurrence:period_type': string;
	'recurrence:start': GDate;
	'recurrence:weekend_adj': string;
}

// Budget ...
export interface Budget {
	'@_version': string;
	'bgt:id': string;
	'bgt:name': string;
	'bgt:description': string;
	'bgt:num-periods': number;
	'bgt:recurrence': RecurrenceContent;
	'bgt:slots': Slots;
}

// GncBillTerm ...
export interface GncBillTerm {
	'@_version': string;
	'billterm:guid': string;
	'billterm:name': string;
	'billterm:desc': string;
	'billterm:refcount': number;
	'billterm:invisible': boolean;
	'billterm:slots': Slots;
	'billterm:child': string;
	'billterm:parent': string;
	'billterm:days': Days;
	'billterm:proximo': Proximo;
}

// GncCustomer ...
export interface GncCustomer {
	'@_version': string;
	'cust:guid': string;
	'cust:name': string;
	'cust:id': string;
	'cust:addr': AddressContent;
	'cust:shipaddr': AddressContent;
	'cust:notes': string;
	'cust:terms': string;
	'cust:taxincluded': string;
	'cust:active': boolean;
	'cust:discount': string;
	'cust:credit': string;
	'cust:currency': Currency;
	'cust:use-tt': boolean;
	'cust:taxtable': string;
	'cust:slots': Slots;
}

// AddressContent ...
export interface AddressContent {
	'@_version': string;
	'addr:name': string;
	'addr:addr1': string;
	'addr:addr2': string;
	'addr:addr3': string;
	'addr:addr4': string;
	'addr:phone': string;
	'addr:fax': string;
	'addr:email': string;
}

// GncEmployee ...
export interface GncEmployee {
	'@_version': string;
	'employee:guid': string;
	'employee:username': string;
	'employee:id': string;
	'employee:addr': AddressContent;
	'employee:language': string;
	'employee:acl': string;
	'employee:active': boolean;
	'employee:workday': string;
	'employee:rate': string;
	'employee:currency': Currency;
	'employee:ccard': string;
	'employee:slots': Slots;
}

// GncEntry ...
export interface GncEntry {
	'@_version': string;
	'entry:guid': string;
	'entry:date': string;
	'entry:entered': TimeSpec;
	'entry:description': string;
	'entry:action': string;
	'entry:notes': string;
	'entry:qty': string;
	'entry:i-acct': string;
	'entry:i-price': string;
	'entry:i-discount': string;
	'entry:invoice': string;
	'entry:i-disc-type': string;
	'entry:i-disc-how': string;
	'entry:i-taxable': boolean;
	'entry:i-taxincluded': boolean;
	'entry:i-taxtable': string;
	'entry:b-acct': string;
	'entry:b-price': string;
	'entry:bill': string;
	'entry:billable': boolean;
	'entry:billto': OwnerContent;
	'entry:b-taxable': boolean;
	'entry:b-taxincluded': boolean;
	'entry:b-pay': string;
	'entry:b-taxtable': string;
	'entry:order': string;
}

// OwnerContent ...
export interface OwnerContent {
	'@_version': string;
	'owner:type': string;
	'owner:id': string;
}

// GncInvoice ...
export interface GncInvoice {
	'@_version': string;
	'invoice:guid': string;
	'invoice:id': string;
	'invoice:owner': OwnerContent;
	'invoice:opened': TimeSpec;
	'invoice:posted': TimeSpec;
	'invoice:terms': string;
	'invoice:billing_id': string;
	'invoice:notes': string;
	'invoice:active': boolean;
	'invoice:posttxn': string;
	'invoice:postlot': string;
	'invoice:postacc': string;
	'invoice:currency': Currency;
	'invoice:billto': OwnerContent;
	'invoice:charge-amt': string;
	'invoice:slots': Slots;
}

// GncJob ...
export interface GncJob {
	'@_version': string;
	'job:guid': string;
	'job:id': string;
	'job:name': string;
	'job:reference': string;
	'job:owner': OwnerContent;
	'job:active': boolean;
}

// GncOrder ...
export interface GncOrder {
	'@_version': string;
	'order:guid': string;
	'order:id': string;
	'order:owner': OwnerContent;
	'order:opened': TimeSpec;
	'order:closed': TimeSpec;
	'order:notes': string;
	'order:reference': string;
	'order:active': boolean;
}

// GncTaxTable ...
export interface GncTaxTable {
	'@_version': string;
	'taxtable:guid': string;
	'taxtable:name': string;
	'taxtable:refcount': number;
	'taxtable:invisible': boolean;
	'taxtable:child': string;
	'taxtable:parent': string;
	'taxtable:entries': Entries;
}

// GncTaxTableEntry ...
export interface GncTaxTableEntry {
	'tte:acct': string;
	'tte:amount': string;
	'tte:type': string;
}

// GncVendor ...
export interface GncVendor {
	'@_version': string;
	'vendor:guid': string;
	'vendor:name': string;
	'vendor:id': string;
	'vendor:addr': AddressContent;
	'vendor:notes': string;
	'vendor:terms': string;
	'vendor:taxincluded': string;
	'vendor:active': boolean;
	'vendor:currency': Currency;
	'vendor:use-tt': boolean;
	'vendor:taxtable': string;
	'vendor:slots': Slots;
}
